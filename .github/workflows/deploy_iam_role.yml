name: Create IAM Role in Org Accounts

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  create-role:
    runs-on: ubuntu-latest

    env:
      ROLE_TO_ASSUME: arn:aws:iam::872515281040:role/GitHubActionsTerraformRole
      TARGET_ROLE_NAME: GitHubActionsIAMRole
      ORG_ASSUME_ROLE_NAME: OrgAccountAdminRole
      AWS_REGION: us-east-1
      GITHUB_REPO: vibhoragarwal81/aws-oidc  # Replace with your actual repo

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: List accounts and create IAM role if missing
        run: |
          ACCOUNT_IDS=$(aws organizations list-accounts --query "Accounts[?Status=='ACTIVE'].Id" --output text)

          for ACCOUNT_ID in $ACCOUNT_IDS; do
            echo "🔍 Checking account: $ACCOUNT_ID"
            CREDS=$(aws sts assume-role \
              --role-arn arn:aws:iam::$ACCOUNT_ID:role/$ORG_ASSUME_ROLE_NAME \
              --role-session-name GitHubActionsSession \
              --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' \
              --output text)

            export AWS_ACCESS_KEY_ID=$(echo $CREDS | cut -d' ' -f1)
            export AWS_SECRET_ACCESS_KEY=$(echo $CREDS | cut -d' ' -f2)
            export AWS_SESSION_TOKEN=$(echo $CREDS | cut -d' ' -f3)

            if aws iam get-role --role-name $TARGET_ROLE_NAME >/dev/null 2>&1; then
              echo "✅ Role $TARGET_ROLE_NAME already exists in $ACCOUNT_ID"
            else
              echo "🚀 Creating role $TARGET_ROLE_NAME in $ACCOUNT_ID"

              TRUST_POLICY=$(cat <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Federated": "arn:aws:iam::$ACCOUNT_ID:oidc-provider/token.actions.githubusercontent.com"
      },
      "Action": "sts:AssumeRoleWithWebIdentity",
      "Condition": {
        "StringEquals": {
          "token.actions.githubusercontent.com:aud": "sts.amazonaws.com",
          "token.actions.githubusercontent.com:sub": "repo:${GITHUB_REPO}:ref:refs/heads/main"
        }
      }
    }
  ]
}
EOF
)

              PERMISSIONS_POLICY=$(cat <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "ec2:DescribeInstances",
        "s3:ListBucket"
      ],
      "Resource": "*"
    }
  ]
}
EOF
)

              aws iam create-role \
                --role-name $TARGET_ROLE_NAME \
                --assume-role-policy-document "$TRUST_POLICY"

              aws iam put-role-policy \
                --role-name $TARGET_ROLE_NAME \
                --policy-name GitHubActionsPermissions \
                --policy-document "$PERMISSIONS_POLICY"

              echo "✅ Role created in $ACCOUNT_ID"
            fi
          done
